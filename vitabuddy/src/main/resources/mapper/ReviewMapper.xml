<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.vitabuddy.dao.IReviewDAO">

    <!-- 리뷰 ResultMap -->
    <resultMap id="reviewResultMap" type="com.example.vitabuddy.model.ReviewVO">
        <result property="reviewNo" column="REVIEWNO" jdbcType="VARCHAR"/>
        <result property="reviewTitle" column="REVIEWTITLE" jdbcType="VARCHAR"/>
        <result property="userId" column="USERID" jdbcType="VARCHAR"/>
        <result property="supId" column="SUPID" jdbcType="INTEGER"/>
        <result property="rating" column="RATING" jdbcType="VARCHAR"/>
        <result property="reviewHashtag" column="REVIEWHASHTAG" jdbcType="VARCHAR"/>
        <result property="reviewDate" column="REVIEWDATE" jdbcType="DATE"/>
        <result property="content" column="CONTENT" jdbcType="VARCHAR"/>
        <result property="startDate" column="STARTDATE" jdbcType="DATE"/>
        <result property="endDate" column="ENDDATE" jdbcType="DATE"/>
        <result property="reviewImg" column="REVIEWIMG" jdbcType="VARCHAR"/>
        <result property="supName" column="SUPNAME" jdbcType="VARCHAR"/>
    </resultMap>

    <!-- 상품 정보 ResultMap -->
    <resultMap id="supplementResultMap" type="com.example.vitabuddy.model.SupplementStoreVO">
        <result property="supId" column="supId" jdbcType="INTEGER"/>
        <result property="supName" column="supName" jdbcType="VARCHAR"/>
        <result property="supBrand" column="supBrand" jdbcType="VARCHAR"/>
        <result property="avgRating" column="avgRating" jdbcType="DOUBLE"/>
        <result property="reviewCount" column="reviewCount" jdbcType="INTEGER"/>
        <result property="supPrice" column="supPrice" jdbcType="INTEGER"/>
    </resultMap>

    <!-- 브랜드별 상위 1개 상품 조회 -->
	<select id="getTopSupplementsByBrand" resultMap="supplementResultMap">
	    WITH RankedSupplements AS (
	        SELECT s.SupID, s.SupName, s.SupBrand,
	               AVG(TO_NUMBER(r.Rating)) AS avgRating, 
	               COUNT(r.ReviewNo) AS reviewCount,
	               s.SupPrice AS supPrice,
	               RANK() OVER (PARTITION BY s.SupBrand 
	                            ORDER BY (AVG(TO_NUMBER(r.Rating)) * 0.5) + (COUNT(r.ReviewNo) * 0.5) DESC) AS rank
	        FROM Supplement s
	        LEFT JOIN Review r ON s.SupID = r.SupID
	        GROUP BY s.SupID, s.SupName, s.SupBrand, s.SupPrice
	    )
	    SELECT SupID, SupName, SupBrand, avgRating, reviewCount, supPrice
	    FROM RankedSupplements
	    WHERE rank = 1
        AND ROWNUM &lt;= 6
    </select>

    <select id="reviewLists" resultMap="reviewResultMap">
        SELECT * FROM Review WHERE SupID = #{supId}
    </select>

    <select id="getReviewsByUserId" parameterType="string" resultMap="reviewResultMap">
        SELECT r.ReviewNo, r.ReviewTitle, s.SupName AS supName, r.ReviewDate 
        FROM Review r 
        JOIN Supplement s ON r.SupID = s.SupID 
        WHERE r.UserId = #{userId} 
        ORDER BY r.ReviewDate DESC
    </select>

	<!-- SupID로 이미지(InputStream) 가져오기 -->
	<select id="getSupplementImageById" parameterType="int" resultType="byte[]">
	    SELECT SupImg FROM supplement WHERE SupID = #{supId}
	</select>
	


</mapper>
